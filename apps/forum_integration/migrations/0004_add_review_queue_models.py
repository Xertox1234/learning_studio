# Generated by Django 5.2.4 on 2025-07-21 03:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('forum_conversation', '0014_alter_post_id_alter_topic_id'),
        ('forum_integration', '0003_useractivity_active_sessions_useractivity_time_spent_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('flagged_post', 'Flagged Post'), ('new_user_post', 'New User Post'), ('edited_post', 'Edited Post'), ('user_report', 'User Report'), ('spam_detection', 'Spam Detection'), ('trust_level_review', 'Trust Level Review')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_info', 'Needs More Information'), ('escalated', 'Escalated')], default='pending', max_length=15)),
                ('priority', models.IntegerField(choices=[(1, 'Critical'), (2, 'High'), (3, 'Medium'), (4, 'Low')], default=3)),
                ('reason', models.TextField(help_text='Reason for review or flag description')),
                ('moderator_notes', models.TextField(blank=True, help_text='Internal moderator notes')),
                ('resolution_notes', models.TextField(blank=True, help_text='Resolution explanation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(default=0.0, help_text='Calculated priority score')),
                ('upvotes', models.IntegerField(default=0, help_text='Community upvotes for this review')),
                ('assigned_moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forum_assigned_reviews', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.post')),
                ('reported_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forum_reported_reviews', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forum_reports_made', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.topic')),
            ],
            options={
                'verbose_name': 'Review Queue Item',
                'verbose_name_plural': 'Review Queue Items',
                'ordering': ['-priority', '-score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('approve', 'Approved'), ('reject', 'Rejected'), ('edit', 'Edited'), ('delete', 'Deleted'), ('ban_user', 'Banned User'), ('trust_level_change', 'Trust Level Changed'), ('assign_moderator', 'Assigned Moderator'), ('escalate', 'Escalated'), ('bulk_action', 'Bulk Action')], max_length=20)),
                ('reason', models.TextField(help_text='Reason for the moderation action')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional action details')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
                ('target_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.post')),
                ('target_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.topic')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderation_targets', to=settings.AUTH_USER_MODEL)),
                ('review_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_integration.reviewqueue')),
            ],
            options={
                'verbose_name': 'Moderation Log',
                'verbose_name_plural': 'Moderation Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FlaggedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('off_topic', 'Off Topic'), ('harassment', 'Harassment'), ('duplicate', 'Duplicate'), ('misinformation', 'Misinformation'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Additional details about the flag')),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('flagger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flagged_content', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.post')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_flags', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum_conversation.topic')),
            ],
            options={
                'verbose_name': 'Flagged Content',
                'verbose_name_plural': 'Flagged Content',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_resolved', 'created_at'], name='forum_integ_is_reso_65ab2f_idx'), models.Index(fields=['flagger'], name='forum_integ_flagger_49506b_idx'), models.Index(fields=['reason'], name='forum_integ_reason_33363d_idx')],
                'unique_together': {('flagger', 'post', 'reason')},
            },
        ),
        migrations.AddIndex(
            model_name='reviewqueue',
            index=models.Index(fields=['status', 'priority'], name='forum_integ_status_ff12ff_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewqueue',
            index=models.Index(fields=['review_type', 'status'], name='forum_integ_review__a892a9_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewqueue',
            index=models.Index(fields=['assigned_moderator', 'status'], name='forum_integ_assigne_2070ae_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewqueue',
            index=models.Index(fields=['created_at'], name='forum_integ_created_ee57b4_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewqueue',
            index=models.Index(fields=['score'], name='forum_integ_score_27be0e_idx'),
        ),
        migrations.AddIndex(
            model_name='moderationlog',
            index=models.Index(fields=['moderator', 'timestamp'], name='forum_integ_moderat_0c694a_idx'),
        ),
        migrations.AddIndex(
            model_name='moderationlog',
            index=models.Index(fields=['action_type', 'timestamp'], name='forum_integ_action__696ee4_idx'),
        ),
        migrations.AddIndex(
            model_name='moderationlog',
            index=models.Index(fields=['target_user', 'timestamp'], name='forum_integ_target__65a655_idx'),
        ),
        migrations.AddIndex(
            model_name='moderationlog',
            index=models.Index(fields=['timestamp'], name='forum_integ_timesta_39a69e_idx'),
        ),
    ]
